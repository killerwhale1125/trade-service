plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'carrot'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs += ["-parameters"]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {


	// Apache Commons IO for IOUtils
	implementation 'commons-io:commons-io:2.11.0'

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'// AWS SDK v2
//	implementation 'software.amazon.awssdk:core:2.20.10'
//	implementation 'software.amazon.awssdk:s3:2.20.10'
//	implementation 'software.amazon.awssdk:auth:2.20.10'
//	implementation 'software.amazon.awssdk:regions:2.20.10'
//	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.215'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// 프로메테우스 구현 라이브러리
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// JSON.simple dependency
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// Bouncy Castle
	implementation 'org.bouncycastle:bcprov-jdk15on:1.68'

	// Spring Security Core
	implementation 'org.springframework.security:spring-security-core'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL Connector
	runtimeOnly 'com.mysql:mysql-connector-j'

	// H2 Database
	runtimeOnly 'com.h2database:h2'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Spring Boot Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}

jar {
	enabled = false
}
