package carrot.market.member.mock;

import carrot.market.member.domain.Member;
import carrot.market.member.service.port.MemberRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

public class FakeMemberRepository implements MemberRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Member> data = new ArrayList<>();

    @Override
    public Member save(Member member) {
        if (Objects.isNull(member.getId())) {
            final Member createUser = Member.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .email(member.getEmail())
                    .password(member.getPassword())
                    .nickname(member.getNickname())
                    .address(member.getAddress())
                    .location(member.getLocation())
                    .roles(member.getRoles())
                    .build();
            data.add(createUser);
            return createUser;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), member.getId()));
            data.add(member);
            return member;
        }
    }

    @Override
    public boolean existsByEmail(String email) {
        return true;
    }

    @Override
    public Member getById(long id) {
        return null;
    }
}
